<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
<style type="text/css">
/* <![CDATA[ */ @import "/branding/css/tigris.css"; /* ]]> */
</style>
  <script src="/branding/scripts/sc.js" type="text/javascript"></script>
  <link rel="stylesheet" type="text/css" href="/branding/css/print.css" media="print" />

  <title>効果的なバージョン管理</title>
 </head>

 <body class="docs" onload="self.focus()">
  <div class="docs" id="projectownerversioncontrol">
   <h2><a id="Effective" name="Effective">効果的なバージョン管理</a></h2>

   <div id="toc">
    <ul>
     <li><strong><a href="/nonav/servlets/HelpTOC">ヘルプ索引</a></strong></li>
    </ul>

    <ul>
     <li>プロジェクト・ホームページの編集</li>

     <li>プロジェクト・メンバーの追加および管理</li>

     <li>プロジェクト・メーリングリストの管理</li>

     <li>プロジェクト・ドキュメンテーションの管理</li>

     <li>プロジェクト・ソースコードの管理</li>

     <li>プロジェクト課題追跡</li>

     <li>プロジェクト・サイトのコンテンツ管理</li>

     <li>効果的なバージョン管理</li>
    </ul>
   </div>

   <p>バージョン管理の特徴は、プロジェクトのソースコードをオリジナルの状態から加えられた変更を効率的に追跡することです。プロジェクト内においては、課題追跡ツール (IssueZilla) 内の課題と変更管理ツール (CVS) での変更記録の関連付けが、バージョンを管理する効果的な方法です。プロジェクト内で手作業で行われるプロセスは、プロジェクトのライフサイクルを通して非常に貴重な情報を提供することになります。手作業によるプロセスには、IssueZilla で CVS チェックイン・メッセージへのリンクを貼り付けることや、CVS チェックイン・メッセージに課題番号を追加して補足することなどが含まれます。さらに、これらのツールによって自動的に生成されるメッセージを通した改善を行ったプロジェクト・メンバーのレビュー・プロセスは、プロジェクトのメンバーがこのプロセスから外れないように監視できます。</p>

   <p>CVS がもともと持つ機能として、ある特定の開発サイクルのコードセットを分離ができることがあります。バージョンがタグ付けされると、識別子が CVS 内で必要となります。 バージョンの追跡プロセスをより良くコーディネートするには、CVSのバージョン識別子を IssueZilla 内で識別可能にします。 CVS のバージョンを IssueZilla データベースに追加して、課題の作成でバージョンを必要条件にすると、バージョン追跡プロセスがより改善されます。これにより、特定のバージョンにある課題のステータスを簡単に識別し、特定のバージョン内に関連付けられている全課題に対するクエリーを実行できます。</p>

   <h3>IssueZilla とバージョン管理</h3>

   <p>IssueZilla のバージョン番号により、プロジェクトのリリースとバージョンを追跡できます。バージョン番号を決定する場合は、課題追跡ツールのバージョンを変更管理ツールである CVS のタグ番号と関連付けておくことをお勧めします。 2 つのツール間で番号を関連付けておくと、課題追跡ツールでの課題と CVS で行われた変更間の相関プロセスが簡素化できます。 プロジェクトのオーナは、IssueZilla のバージョン番号リストを設定し、すべての課題にバージョン番号をさせるようにすることができます。新しい課題を作成するユーザは、課題をコミットするためにバージョン番号を指定しなければなりません。これは、レポートを実行する場合に特に効果的です。 特定のバージョン番号に関連付けられている全課題のIssueZilla での検索は、クエリーを定義するだけで実行できます。 詳しくは、<a href="/nonav/docs/ProjectOwnerIssues.html#adminconfigure">IssueZilla </a>の管理機能の設定を参照してください。</p>

   <p>さらに、レポートはバージョンの進行状況を追跡するために、IssueZilla を通して実行することができます。</p>

   <h3>CVS とバージョン管理</h3>

   <p>課題追跡ツールにてCVS のバージョンを反映するように設定したら、プロジェクトのメンバーにおいて、 CVS 
で作成するコミット・メッセージに課題番号を追加するように指導して、より詳細な変更管理が行えます。これは、複数の異なる手作業で行うことができます。</p>

   <ul>
    <li>メンバーは、手作業で課題番号をコミット・メッセージに追加できます。 これは、CVSWeb の「課題番号」フィールドで簡素化されます。</li>

    <li>メンバーは、IssueZilla 課題へのリンクを CVS コミット・メッセージに貼り付けることができます。</li>

    <li>メンバーは、CVS のコミットのdiffステートメントへのリンクを IssueZilla の課題に貼り付けることができます。</li>
   </ul>

   <p>理想としては、これらの作業がすべて、課題およびコミットのプロセスの一部として標準で行われると良いでしょう。</p>

   <h3>メンバーのレビュー・プロセスとバージョン管理</h3>

   <p>IssueZilla で課題が作成されると、E-Mail がメーリングリストに記載されているメンバーに自動的へ送信されます。コミット・メッセージや IssueZilla 課題の<i>diff</i>ステートメントのグラフィックス表示へのリンクを掲示することにより、レビュー・プロセスが発生します。プロジェクトのメンバーは、IssueZilla が生成した E-Mail を自動的に受信します。プロジェクトのメンバーは、自分のプロセスに正しく従って課題をレビューし、十分な関連情報が提供されていることを確認します。さらに、プロジェクトのチームが同じような課題に直面した場合に過去に課題を解決した方法に関する情報が役立ちます。これは、IssueZilla の番号を見つけて CVS の変更情報にアクセスするか、コミット・メッセージをレビューして IssueZilla の番号を見つけることで参照できます。</p>

   <p>CVS や IssueZilla でのコミットに際して作成される E-Mail 
はアーカイブされており、作成者、件名、日付、スレッドを使って検索できます。</p>

   <p>標準の作業として手作業の手順をプロジェクト内で組み合わせて行うことにより、効果的なバージョン管理を維持できます。</p>

   <div class="courtesylinks">
    <p><a href="#toc">トップ</a> | <a href="/nonav/servlets/HelpTOC">ヘルプ索引</a></p>
   </div>
  </div>
 </body>
</html>


