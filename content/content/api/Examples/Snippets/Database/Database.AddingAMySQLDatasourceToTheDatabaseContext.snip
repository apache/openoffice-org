<?xml version="1.0"?>
<!--
$RCSfile: Database.AddingAMySQLDatasourceToTheDatabaseContext.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2007/03/12 08:42:46 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Database">

<keywords>
</keywords>

<authors>
</authors>

<question heading="adding a MySQL datasource to the DatabaseContext">How can a MySQL database be added to the DatabaseContext?
</question>

<answer>
<listing>/* get the service manager */
xContext = UNO.connect()
XMcf = xContext~getServiceManager

/* retrieve the DatabaseContext and get its XSingleServiceFactory interface */
xSingleServiceFactory = xMcf~createInstanceWithContext(-
	&quot;{%see com.sun.star.sdb.DatabaseContext}&quot;, xContext)~{%see com.sun.star.lang.XSingleServiceFactory%XSingleServiceFactory}

/* create a new generic data source */
dataSource = xSingleServiceFactory~createInstance

/* setting the necessary data source properties */
xPropertySet = dataSource~{%see com.sun.star.beans.XPropertySet%XPropertySet}
/* MySQL URL */
xPropertySet~setPropertyValue(&quot;URL&quot;, &quot;sdbc:mysql:jdbc:localhost:3306/test&quot;)
/* force password dialog */
xPropertySet~setPropertyValue(-
	&quot;IsPasswordRequired&quot;,.bsf~new(&quot;java.lang.Boolean&quot;,&quot;true&quot;))
/* suggest &apos;stefan&apos; as user name */
xPropertySet~setPropertyValue(&quot;User&quot;, &quot;stefan&quot;)

/* determine the JDBC driver */
props = bsf.createArray(.UNO~propertyValue,1)
props[1] = .UNO~PropertyValue~new
props[1]~Name = &quot;JavaDriverClass&quot;
props[1]~Value = &quot;com.mysql.jdbc.Driver&quot;
xPropertySet~setPropertyValue(&quot;Info&quot;, props)

/* get the XDocumentDataSource interface of the data source */
xDocumentDataSource = dataSource~{%see com.sun.star.sdb.XDocumentDataSource%XDocumentDataSource}

/* get the OfficeDatabaseDocument service via the &apos;DatabaseDocument&apos; attribute*/
xOfficeDatabaseDocument = xDocumentDataSource~getDatabaseDocument

/* retrieve the XStorable, xClosable, and XModel interface */
xStorable = xOfficeDatabaseDocument~{%see com.sun.star.frame.XStorable%XStorable}
xCloseable = xOfficeDatabaseDocument~{%see com.sun.star.sdbc.XCloseable%XCloseable}
xModel = xOfficeDatabaseDocument~{%see com.sun.star.xforms.XModel%XModel}

/* register it with the database context */
xNamingService = xSingleServiceFactory~{%see com.sun.star.uno.XNamingService%XNamingService}
url = uno.ConvertToURL(&quot;c:/odbfiles/mysql1.odb&quot;)
xStorable~storeAsURL(url,xModel~getArgs)
xNamingService~registerObject(&quot;mysql-test&quot;, dataSource)
say &quot;database document has been stored to &apos;&quot;url&quot;&apos; !&quot;

/* close database */
xCloseable~close(.true)
		
::requires UNO.cls -- get UNO support</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
</changelog>

</snippet>
