<?xml version="1.0"?>
<!--
$RCSfile: Writer.StoreActualDocumentAs__pdf.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/07/14 09:36:46 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Writer">

<keywords>
	<keyword>pdf</keyword>
</keywords>

<authors>
	<author id="matthiasprem" initial="true" email="h0252896@wu-wien.ac.at">Matthias Prem</author>
</authors>

<question heading="Store actual Document as *.pdf">How can I store the actual document as *.pdf?
<p>The document has been saved before under *.odt for example.</p>
</question>

<answer>
<listing>/* StoreActualAsPDF.rex */
/* Macro */
/* How to store an opened file as *.pdf */

/* get the script context */
xScriptContext=uno.getScriptContext()

/* get the document and the component context */
oDoc=xScriptContext~getDocument
oContext=xScriptContext~getComponentContext

/* defining the storing properties */
xStorable = oDoc~{%see com.sun.star.frame.XStorable%XStorable}

storeprops = bsf.createArray(.UNO~propertyValue, 2)
storeprops[1] = .UNO~PropertyValue~new
storeprops[1]~Name  = &quot;FilterName&quot;
storeprops[1]~Value = &quot;writer_pdf_Export&quot;
storeprops[2] = .UNO~PropertyValue~new
storeprops[2]~Name  = &quot;CompressMode&quot;
storeprops[2]~Value = 2

/* retrieve url from document */
url=oDoc~getURL()

/* if document has been saved to an url */
if (url&lt;&gt;&quot;&quot;) then do
	parse var url url &quot;.&quot; .
	url= url || &quot;.pdf&quot;
	xStorable~storeToUrl(url, storeprops)
end

/* if document has not been saved */
else do
	.bsf.dialog~messagebox(&quot;File has to be saved first.&quot;)
end

::requires UNO.CLS</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
	<change author-id="matthiasprem" date="2006-07-10">Initial version</change>
</changelog>

</snippet>
