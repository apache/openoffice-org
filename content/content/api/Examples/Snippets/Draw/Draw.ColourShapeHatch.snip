<?xml version="1.0"?>
<!--
$RCSfile: Draw.ColourShapeHatch.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2007/08/13 13:03:24 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Draw">

<keywords>
	<keyword>hatch</keyword>
	<keyword>HatchStyle</keyword>
	<keyword>fillstyle</keyword>
</keywords>

<authors>
	<author id="" initial="false" email="">Nicole Scholz</author>
</authors>

<question heading="Colour shape hatch">How can I set the fillcolour of a shape hatch?
</question>

<answer>
<p>In this example the fillcolour of 3 rectangles is set hatch with using the FillStyle function.</p>
<listing>/* Retrieve the Desktop object, we need its XComponentLoader interface to load a new document */
oDesktop         = UNO.createDesktop()    -- get the UNO Desktop service object
xComponentLoader = oDesktop~{%see com.sun.star.frame.XDesktop%XDesktop}~{%see com.sun.star.frame.XComponentLoader%XComponentLoader}  -- get componentLoader interface

/* open the blank file */
url = &quot;private:factory/sdraw&quot;
xDrawComponent = xComponentLoader~loadComponentFromURL(url, &quot;_blank&quot;, 0, -
                                                       .UNO~noProps)
/* need document&apos;s factory to be able to insert created objects */
xDocumentFactory = xDrawComponent~{%see com.sun.star.lang.XMultiServiceFactory%XMultiServiceFactory}

/* get draw page by index */
xDrawPage = xDrawComponent~{%see com.sun.star.drawing.XDrawPagesSupplier%XDrawPagesSupplier}~getDrawPages~getByIndex(0)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}

/* draw a rectangle */
xrectangle = xDocumentFactory~createInstance(&quot;{%see com.sun.star.drawing.RectangleShape}&quot;)~{%see com.sun.star.drawing.XShape%xshape}
xrectangle~setPosition(.bsf~new(&quot;{%see com.sun.star.awt.Point}&quot;, 1000, 1000))
xrectangle~setSize(.bsf~new(&quot;{%see com.sun.star.awt.Size}&quot;, 5000, 5000))
xDrawPage~add(xrectangle) -- adds the rectangle to the draw document

/* colour the rectangle hatch single */
xShapeProps = xrectangle~{%see com.sun.star.beans.XPropertySet%XPropertySet}
ohatch = .bsf~new(&quot;{%see com.sun.star.drawing.Hatch}&quot;)
ohatch~Style = bsf.getConstant(&quot;{%see com.sun.star.drawing.HatchStyle}&quot;, &quot;SINGLE&quot;)
ohatch~Color          = 2554848
ohatch~Distance       = 1000 -- distance is 1 centimeter
ohatch~Angle          = 900 -- angle of 90 degrees

/* fill the rectangle */
xShapeProps~setPropertyValue(&quot;FillStyle&quot;, -
	bsf.getConstant(&quot;{%see com.sun.star.drawing.FillStyle}&quot;, &quot;HATCH&quot;))
xShapeProps~setPropertyValue(&quot;FillHatch&quot;, ohatch)


/* draw a rectangle */
xrectangle1 = xDocumentFactory~createInstance(&quot;{%see com.sun.star.drawing.RectangleShape}&quot;)~{%see com.sun.star.drawing.XShape%xshape}
xrectangle1~setPosition(.bsf~new(&quot;{%see com.sun.star.awt.Point}&quot;, 1000, 7000))
xrectangle1~setSize(.bsf~new(&quot;{%see com.sun.star.awt.Size}&quot;, 5000, 5000))
xDrawPage~add(xrectangle1) -- adds the rectangle to the draw document

/* colour the rectangle hatch double */
xShapeProps = xrectangle1~{%see com.sun.star.beans.XPropertySet%XPropertySet}

ohatch1 = .bsf~new(&quot;{%see com.sun.star.drawing.Hatch}&quot;)
ohatch1~Style = bsf.getConstant(&quot;{%see com.sun.star.drawing.HatchStyle}&quot;, &quot;DOUBLE&quot;)
ohatch1~Color          = 13771137
ohatch1~Distance       = 50 -- distance is 0.5 millimeter
ohatch1~Angle          = 0 -- angle of 0 degrees

/* fill the rectangle */
xShapeProps~setPropertyValue(&quot;FillStyle&quot;, -
	bsf.getConstant(&quot;{%see com.sun.star.drawing.FillStyle}&quot;, &quot;HATCH&quot;))
xShapeProps~setPropertyValue(&quot;FillHatch&quot;, ohatch1)


/* draw a rectangle */
xrectangle2 = xDocumentFactory~createInstance(&quot;{%see com.sun.star.drawing.RectangleShape}&quot;)~{%see com.sun.star.drawing.XShape%xshape}
xrectangle2~setPosition(.bsf~new(&quot;{%see com.sun.star.awt.Point}&quot;, 1000, 13000))
xrectangle2~setSize(.bsf~new(&quot;{%see com.sun.star.awt.Size}&quot;, 5000, 5000))
xDrawPage~add(xrectangle2) -- adds the rectangle to the draw document

/* colour the rectangle hatch double */
xShapeProps = xrectangle2~{%see com.sun.star.beans.XPropertySet%XPropertySet}

ohatch2 = .bsf~new(&quot;{%see com.sun.star.drawing.Hatch}&quot;)
ohatch2~Style = bsf.getConstant(&quot;{%see com.sun.star.drawing.HatchStyle}&quot;, &quot;TRIPLE&quot;)
ohatch2~Color          = 2552150
ohatch2~Distance       = 500 -- distance is 5 millimeter
ohatch2~Angle          = 0 -- angle of 0 degrees

/* fill the rectangle */
xShapeProps~setPropertyValue(&quot;FillStyle&quot;, -
	bsf.getConstant(&quot;{%see com.sun.star.drawing.FillStyle}&quot;, &quot;HATCH&quot;))
xShapeProps~setPropertyValue(&quot;FillHatch&quot;, ohatch2)


::requires UNO.cls    -- get UNO support</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
</changelog>

</snippet>
