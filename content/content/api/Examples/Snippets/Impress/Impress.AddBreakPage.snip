<?xml version="1.0"?>
<!--
$RCSfile: Impress.AddBreakPage.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2007/08/13 13:05:15 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Impress">

<keywords>
	<keyword>break</keyword>
</keywords>

<authors>
	<author id="" initial="true" email="dominik.gundacker@gmail.com">Dominik Gundacker</author>
</authors>

<question heading="Add a break page in the middle of a presentation">How to add a break page in the middle of the presentation
<p>The user can specify how many minutes the break should be and which text should be displayed during the break</p>
</question>

<answer>
<listing>/* Macro, which generates a break page with a specfic time to display
   the content. The user can control the duration and the breaktext */
/* 05_break.rex */
/* Exceptionhandling */
SIGNAL ON ANY
xScriptContext=uno.getScriptContext()  -- get the xScriptContext object
oDoc=xScriptContext~getDocument  -- get the document service (an XModel object)
/* retrieving the important interfaces to get access to the drawpages */
xDrawPagesSupplier=oDoc~{%see com.sun.star.drawing.XDrawPagesSupplier%XDrawPagesSupplier}
xImpressFactory = oDoc~{%see com.sun.star.lang.XMultiServiceFactory%XMultiServiceFactory}
xDrawPages = xDrawPagesSupplier~getDrawPages

/* check pagecount */
CALL getNumberOfVisibleSlides xDrawPages
pagecount=result 

IF pagecount &lt;= 2 THEN
DO
  .bsf.dialog~messageBox(&quot;This presentation has less than three slide. &quot;-
    &quot;There is no need for running this macro!&quot;, &quot;ERROR&quot;, &quot;error&quot;)
  EXIT 0
END

/* adjust middle value */	
middle = trunc(pagecount / 2);

IF (pagecount // 2 == 0) THEN
   middle = middle - 1

/* ask user, which text should be displayed and the duration of the break */
minutes = .bsf.dialog~inputBox(&quot;How long (minutes) should be the break?&quot;,-
  &quot;Question&quot;, &quot;question&quot;)

/* No input */
if(minutes == &quot;&quot;) then
  DO
    .bsf.dialog~messageBox(&quot;Not a valid number!&quot;, &quot;ERROR&quot;, &quot;error&quot;)
    EXIT 0
  END
message = .bsf.dialog~inputBox(&quot;What text should be displayed?&quot;,-
  &quot;Question&quot;, &quot;question&quot;)
slideCounter = 0
pagecount=xDrawPages~{%see com.sun.star.container.XIndexAccess%XIndexAccess}~getCount
DO i = 0 TO pagecount - 1
  xDrawPage = xDrawPages~getByIndex(i)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}
  xProps = xDrawPage~{%see com.sun.star.beans.XPropertySet%XPropertySet}
  visibility = xProps~getPropertyValue(&quot;Visible&quot;)
  IF(visibility == 1) THEN
    slideCounter = slideCounter + 1
  IF(visibility == 1 &amp; slideCounter == middle) THEN
  DO
    /* insert a slide in the middle of the page */
    xDrawPages~insertNewByIndex(i+1)
    beforeBreakPage = xDrawPages~getByIndex(i+1)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}
    beforeBreakPageProps = beforeBreakPage~{%see com.sun.star.beans.XPropertySet%XPropertySet}
    beforeBreakPageProps~setPropertyValue(&quot;Effect&quot;, -
      bsf.getConstant(&quot;{%see com.sun.star.presentation.FadeEffect}&quot;,&quot;WAVYLINE_FROM_LEFT&quot;))
  END

  IF(visibility == 1 &amp; slideCounter == middle+1) THEN
  DO
    /* set the duration to the entered value */
    breakPage = xDrawPages~getByIndex(i+1)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}
    breakPageProps = breakPage~{%see com.sun.star.beans.XPropertySet%XPropertySet}
    breakPageProps~setPropertyValue(&quot;Change&quot;, box(&quot;int&quot;, 1))
    breakPageProps~setPropertyValue(&quot;Duration&quot;, box(&quot;int&quot;, minutes * 60))

    /* create the heading of the break slide */
    textShape = xImpressFactory~createInstance(&quot;{%see com.sun.star.drawing.TextShape}&quot;) 
    textShape = textShape~{%see com.sun.star.drawing.XShape%XShape}
    CALL setSizeAndPosition textShape, 15000, 3000, 6800, 2000
    textProps = textShape~{%see com.sun.star.beans.XPropertySet%XPropertySet}
    breakPage~add(textShape)

    /* assigning effects */
    textProps~setPropertyValue(&quot;TextFitToSize&quot;,-
      bsf.getConstant(&quot;{%see com.sun.star.drawing.TextFitToSizeType}&quot;,&quot;PROPORTIONAL&quot;))
    animationEffects = bsf.wrapStaticFields(-
      &quot;{%see com.sun.star.presentation.AnimationEffect}&quot;)
    speeds = bsf.wrapStaticFields(&quot;{%see com.sun.star.presentation.AnimationSpeed}&quot;)
    textProps~setPropertyValue(&quot;Effect&quot;,animationEffects~RANDOM)
    textProps~setPropertyValue(&quot;Speed&quot;, speeds~MEDIUM)
    textShape~{%see com.sun.star.text.XText%XText}~setString(&quot;-- Break --&quot;)
    
    messageShape = xImpressFactory~createInstance(-
      &quot;{%see com.sun.star.drawing.TextShape}&quot;) 
    messageShape = messageShape~{%see com.sun.star.drawing.XShape%XShape}
    CALL setSizeAndPosition messageShape, 23000, 2000,-
      2800, 7000
    messageShapeProps=messageShape~{%see com.sun.star.beans.XPropertySet%XPropertySet}
    breakPage~add(messageShape)
    
    /* assigning effects */
    messageShapeProps~setPropertyValue(&quot;Effect&quot;,-
      animationEffects~COUNTERCLOCKWISE)
    messageShapeProps~setPropertyValue(&quot;Speed&quot;, speeds~SLOW)
    messageShapeProps~setPropertyValue(&quot;FillStyle&quot;,-
      bsf.getConstant(&quot;{%see com.sun.star.drawing.FillStyle}&quot;, &quot;NONE&quot;))
    messageShapeProps~setPropertyValue(&quot;LineStyle&quot;,-
      bsf.getConstant(&quot;{%see com.sun.star.drawing.LineStyle}&quot;, &quot;NONE&quot;))

    breakText = messageShape~{%see com.sun.star.text.XText%XText}
    breakText~setString(message)
    LEAVE	
  END
END

EXIT 0
/* Returns the number of visible slides */
getNumberOfVisibleSlides :
  USE ARG xDrawPages
  count = 0
  pagecount=xDrawPages~{%see com.sun.star.container.XIndexAccess%XIndexAccess}~getCount
  DO i = 0 TO pagecount - 1
    xDrawPage = xDrawPages~getByIndex(i)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}
    xProps = xDrawPage~{%see com.sun.star.beans.XPropertySet%XPropertySet}
    IF(xProps~getPropertyValue(&quot;Visible&quot;) == 1) THEN
      count = count + 1
  END
return count

ANY:
   .bsf.dialog~messageBox(&quot;Error in line &quot; SIGL &quot;.&quot;-
     &quot;Please check your input!&quot;, &quot;ERROR&quot;, &quot;error&quot;)
::requires UNO.CLS   -- load UNO support for OpenOffice.org

/* routine for positioning and resizing a shape */
::routine  setSizeAndPosition
  use arg shape, width, height, posX, posY

  shape~setSize(-
    .bsf~new(&quot;{%see com.sun.star.awt.Size}&quot;, width, height))
  shape~setPosition(.bsf~new(&quot;com.sun.star.awt.Point&quot;, posX, posY))	</listing>
</answer>

<versions>
</versions>

<operating-systems>
</operating-systems>

<changelog>
</changelog>

</snippet>
