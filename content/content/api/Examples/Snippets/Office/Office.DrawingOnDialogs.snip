<!--
$RCSfile: Office.DrawingOnDialogs.snip,v $

last change: $Revision: 1.2 $ $Author: tomsontom $ $Date: 2005/03/14 07:18:59 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="OOBasic" application="Office">

<keywords>
	<keyword>drawing</keyword>
	<keyword>dialog</keyword>
	<keyword>listener</keyword>
	<keyword>com.sun.star.awt.XWindowPeer</keyword>
	<keyword>com.sun.star.awt.XDevice</keyword>
	<keyword>com.sun.star.awt.XGraphics</keyword>
	<keyword>com.sun.star.awt.XPaintListener</keyword>
</keywords>

<authors>
	<author id="paolomantovani" initial="true" email="paolomantovani@openoffice.org">Paolo Mantovani</author>
</authors>

<versions>
        <version number="1.1.4" status="tested"/>
	<version number="1.1.x" status="may_work"/>
</versions>

<operating-systems>
        <operating-system name="All"/>
</operating-systems>

<question heading="Drawing directly on Uno Dialogs">
Is it possible to draw lines or shapes (or text) directly on a Uno dialog ?
</question>

<answer>
<p>Yes, it is.</p>
<p>the com.sun.star.awt.XGraphics provide methods for drawing.</p>
<p>If you want your draw to be persistent you shall register an com.sun.star.awt.XPaintListener and place your drawing instructions in the method XPaintListener.windowPaint.</p>
<p>To see the whole thing at work, create an empty dialog in the OOBasic IDE and run the example code below:</p>
<listing>
REM  *****  BASIC  *****

Dim oDlg As Object
Dim oPaintListener As Object
Dim oDlgGraph As Object

&apos;__________________________________________________________________________________________________________
Sub Main

	oDlg = CreateUnoDialog(DialogLibraries.Standard.Dialog1)
	oDlgGraph = oDlg.getPeer.createGraphics
	
&apos;	setup some defaults
	With oDlgGraph
&apos;		.setFillColor(RGB(255,255,255))
		.setLineColor(RGB(200,200,200))
	End With

	oPaintListener = CreateUnoListener(&quot;ThisDialog_&quot;, &quot;com.sun.star.awt.XPaintListener&quot;)

	oDlg.addPaintListener( oPaintListener ) 
	oDlg.execute

	oDlg.removePaintListener( oPaintListener )
	
End Sub


&apos;__________________________________________________________________________________________________________
&apos; This is a good place for drawing instructions. 
&apos; This routine is called whenever the dialog has to be repainted
Sub ThisDialog_windowPaint(oEvt)

	&apos;skip if there are other paint events in queue
	If oEvt.count &gt; 0 Then Exit Sub

	Dim oGrad As New com.sun.star.awt.Gradient
	With oGrad
		.Style = com.sun.star.awt.GradientStyle.LINEAR
		.StartColor = RGB( 255, 255, 255 )
		.EndColor = RGB( 200, 230, 230 )
		.Angle = 450 &apos; 45.0 degrees
&apos;		.Border = 0
&apos;		.XOffset = 0
&apos;		.YOffset = 0
		.StartIntensity = 100
		.EndIntensity = 100
		.StepCount = 100
	End With

	nDlgWidth = oDlg.Peer.Size.Width
	nDlgHeight = oDlg.Peer.Size.Height
	
	&apos;draw something
	With oDlgGraph
		.drawGradient(0,0, 100,220, oGrad)
		.drawGradient(100,220, nDlgWidth,nDlgHeight, oGrad)
		.drawText(10,10,&quot;ciao a tutti&quot;)
		.DrawLine(100,0,100,nDlgHeight)
		.DrawLine(0,220,nDlgWidth,220)
	End With
	
	&apos;some nested rounded rect
	For I = 10 To 100 Step 10
	
		nX = 100 + I
		nY = 0 + I
		nWidth = nDlgWidth - 100 - 2*I
		nHeight = 220 - 2*I
		nRound = 110-I
		
		oDlgGraph.setFillColor(RGB(255-I, 255, 255-I))
		oDlgGraph.drawRoundedRect(nX, nY, nWidth, nHeight ,nRound, nRound)	
		
	Next I
	
	
End Sub

&apos;__________________________________________________________________________________________________________
Sub ThisDialog_disposing(oEvt As Object)
	&apos;nothing to do 
End Sub



</listing>
</answer>

<changelog>
	<change author-id="paolomantovani" date="2005-03-11">Initial version</change>
</changelog>

</snippet>

