<?xml version="1.0"?>
<!--
$RCSfile: Office.ConnectToListeningOpenOfficeVariant2_UNO_CLS_.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/08/03 05:25:36 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Office">

<keywords>
	<keyword>connect</keyword>
	<keyword>bootstrap</keyword>
	<keyword>UNO.CLS</keyword>
</keywords>

<authors>
	<author id="RGF" initial="true" email="" copyright="2006">Rony G. Flatscher</author>
</authors>

<question heading="Connect to Listening OpenOffice Variant 2 (UNO.CLS)">How to connect to a already listening OpenOffice?

<p>You can start OpenOffice in listening mode with e.g. this command:</p>
<p></p>
<p>     soffice -accept=socket,host=localhost,port=8100;urp;</p>
<p></p>
<p>This commandline starts OpenOffice listening on port 8100.</p>
</question>

<answer>
<p>This snippet connects to a listening OpenOffice and creates a wordprocessor document.</p>
<listing>/* Demonstrate how to connect to a remote OOo server and use it via ooRexx ({%external http://www.ooRexx.org})

   Assumes that an instance of OOo got started that listens on port 8100; one can
   create such an instance via the commandline, using the following command:

         soffice -accept=socket,host=localhost,port=8100;urp;

   to start an instance without a visible window on the server, you may use the command:

         soffice -invisible -accept=socket,host=localhost,port=8100;urp;

   or

         soffice -headless -accept=socket,host=localhost,port=8100;urp;


   OOo can be configured to listen on a specific port, cf. &quot;Developer&apos;s Guide&quot; for
   further information on this.

   The code in this snippet could be transcribed to Java in a 1:1 mapping.

   This version is based upon the pure BSF4Rexx version that can be found here: {%internal ./Office.ConnectToListeningOpenOfficeVariant2_BSF4Rexx_.snip}
*/


/* initialize connection to server, get its Desktop-service and XComponentLoader interface */
call UNO.CLS         /* get special UNO ooRexx support, which itself calls the module BSF.CLS,
                        thereby establishing full access to Java using BSF4Rexx     */

      /****************************/
      /* ===&gt; Bootstrapping &lt;===  */
      /****************************/

   /* note: the class &quot;{%see com.sun.star.comp.helper.Bootstrap}&quot; is pre-registered under the name
            &quot;bootstrap&quot; in a directory which can be addressed using the environment symbol &quot;.uno&quot; */
localCC    = .uno~bootstrap~createInitialComponentContext(.nil)   /* create a local ComponentContext  */
localSM    = localCC~getServiceManager                            /* create its ServiceManager        */

                     /* query the XUrlResolver interface from the local UnoUrlResolver object   */
                           /* create the URL resolver service object    */
localUUR   = localSM~createInstanceWithContext(&quot;{%see com.sun.star.bridge.UnoUrlResolver}&quot;, localCC)
localXUUR  = localUUR~{%see com.sun.star.bridge.XUnoUrlResolver%XUnoUrlResolver}

                     /* query the XNamingService interface from the remote service object      */
hostname   = &quot;localhost&quot;   /* can be any host on the Internet           */
hostport   = 8100          /* port on which OOo listens for clients     */
   /* URL to use for connecting to server    */
unoUrl     = &quot;uno:socket,host=&quot;hostname&quot;,port=&quot;hostport&quot;;urp;StarOffice.NamingService&quot;
say &quot;connecting using the URL:&quot; pp(unoURL)&quot;...&quot;

                        /* resolve URL, thereby retrieving the remote NamingService service object */
remoteXNS  = localXUUR~resolve(unoUrl)~{%see com.sun.star.uno.XNamingService%XNamingService}

                     /* query the XMultiServiceFactory interface from the remote service object */
remoteXMSF = remoteXNS~getRegisteredObject(&quot;StarOffice.ServiceManager&quot;)~{%see com.sun.star.lang.XMultiServiceFactory%XMultiServiceFactory}

                     /* query the XDesktop interface from the remote service object          */
remoteXD   = remoteXMSF~createInstance(&quot;{%see com.sun.star.frame.Desktop}&quot;)~{%see com.sun.star.frame.XDesktop%XDesktop}

                     /* query the XComponentLoader interface from the remote service object  */
remoteXCL  = remoteXD~{%see com.sun.star.frame.XComponentLoader%XComponentLoader}

      /*********************************************************************/
      /* ===&gt; Now we are ready to load/open and/or create documents  &lt;===  */
      /*********************************************************************/

                     /* load an empty text document into a (local) new window                */
   /* note: an instance of an empty array of type &quot;{%see com.sun.star.beans.PropertyValue}&quot; is
            pre-registered under the name &quot;noProps&quot; in a directory which can be addressed
            using the environment symbol &quot;.uno&quot; */
writerComponent = remoteXCL~loadComponentFromURL(&quot;private:factory/swriter&quot;, &quot;_blank&quot;, 0, .uno~noProps)

</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
	<change author-id="RGF" date="2006-07-20">Initial version</change>
</changelog>

</snippet>
