<snippet language="OOBasic" application="Office">

<keywords>
    <keyword>Combo Box</keyword>
    <keyword>Filter</keyword>
    <keyword>Find</keyword>
    <keyword>Form</keyword>
    <keyword>Event</keyword>
    <keyword>Dynamic</keyword>
    <keyword>Persistant</keyword>
</keywords>

<authors>
    <author id="sasa" email="scat@teol.net">Sasa Kelecevic</author>
    <author id="oli" email="OliverBrinzing@t-online.de">Oliver Brinzing</author>
    <author id="tomsontom" initial="false" email="tom.schindl@bestsolution.at">Tom Schindl</author>
</authors>

<question heading="filter data from combo-box">
How to filter data in a form by selecting value in combo box.
</question>

<answer>
    <p>In oOO1.1 you can do this only with macro.This small wizard insert a macro in document library and assign macro to combo box event - Item status changed.</p>
        <p>Install</p>
    <p>In Basic IDE create new library ( ComboFilter  ).</p>
    <p>Insert module ( Module1 ).</p>
    <p>Copy and paste code below in module.</p>
        <p>Use</p>
        <p>Open the form in Design Mode.</p>
        <p>Link the form with a database.</p>
    <p>On form create combo box with ComboBoxWizard.Follow the  directions in the wizard dialog boxes. </p>
    <p> Run a small wizard  Tools | Macros | Macro - ComboFilter - Module 1 ? Start_Combo_Wizard.</p>
        <p>If you want to see the code open document library ? ComboName_Module - ComboNameFilter. </p>
    <p>Thanks to Oliver Brinzing.</p>

<listing>

'****************  Filter form with ComboBox  ************************

Dim sTableName , sDot , sFieldName , sLike ,sCriteria , sEnd as string
Dim sSource , sCode , sMacro , sModuleName as string
Dim oControl , oForm , oLib as object
Dim oEvents(0) as New com.sun.star.script.ScriptEventDescriptor
Dim iPos as integer

Sub Start_Combo_Wizard

REM Save
ThisComponent.Store

REM define control , form
oControl = thiscomponent.getCurrentSelection.getByIndex(0).getControl
oForm = oControl.getParent

REM table name  and field field mane
sSource = oControl.ListSource
sSource = Mid(sSource,17,)
iPos = InStr(sSource,"FROM")
sField = Mid(sSource,1,iPos - 1,)
sField = Mid(Trim(sField),2,)
sField = Mid(sField,1,Len(sField)-1)
sTable = Right(sSource,Len(sSource)-iPos - 3)
sTable = Mid(Trim(sTable),2,)
sTable = Mid(sTable,1,Len(sTable)-1)

REM filter
sTableName = "chr(34) &amp;" &amp; chr(34) &amp; sTable &amp;  chr(34) &amp; " &amp; chr(34)"
sDot = " &amp; " &amp; """.""" &amp; " &amp; "
sFieldName = "chr(34) &amp;" &amp; chr(34) &amp; sField &amp;  chr(34) &amp; " &amp; chr(34)"
sLike =  " &amp; " &amp; chr(34) &amp; " LIKE '"  &amp;  chr(34) &amp; " &amp; "
sCriteria = " oControl.text &amp; "
sEnd = chr(34) &amp; "'" &amp; chr(34)
call InsertModule

End Sub

REM insert new module in document library
Sub InsertModule
oLib = ThisComponent.BasicLibraries.getByName("Standard")
sModuleName = oControl.Name &amp; "_Module"
call BasicCode
If oLib.hasByName(sModuleName) Then
iReturn = MsgBox("The module already exists. Overwrite?",4 + 256,"" )
    If iReturn = 6 Then
    oLib.removeByName(sModuleName)
    oLib.insertByName(sModuleName,sCode)
    ElseIf iReturn = 7 Then
    Exit Sub
    End If
Else
oLib.insertByName(sModuleName,sCode)
End If

REM Save
ThisComponent.Store
call ComboBoxEvent

End Sub

REM  event and macro
Sub ComboBoxEvent

sMacro = "document:Standard." &amp; sModuleName &amp; "." &amp; oControl.Name &amp; "Filter"
oEvents(0).ListenerType = "XItemListener"
oEvents(0).EventMethod  = "itemStateChanged"
oEvents(0).AddListenerParam = ""
oEvents(0).ScriptType = "StarBasic"
oEvents(0).ScriptCode = sMacro

For I = 0 to oForm.Count-1
  If oControl.Name = oForm.getByIndex(I).Name Then
    Exit For
  EndIf
Next I
oForm.revokeScriptEvents(I)
oForm.registerScriptEvents(I, oEvents())

REM Save
ThisComponent.Store

End sub

REM code in inserted module
Sub BasicCode
newline = chr(10)
sCode = sCode &amp; " Sub " &amp; oControl.Name &amp; "Filter(oEvent)" &amp; newline
sCode = sCode &amp; " oControl = oEvent.Source.Model" &amp; newline &amp; newline
sCode = sCode &amp; " If oControl.Name = " &amp; chr(34) &amp; oControl.Name &amp; chr(34) &amp; " Then" &amp; newline
sCode = sCode &amp; " oForm = oControl.Parent" &amp; newline
sFormFilter = sTableName &amp; sDot &amp; sFieldName &amp; sLike &amp; sCriteria &amp; sEnd
sCode = sCode &amp; " sFormFilter = " &amp; sFormFilter
sCode = sCode &amp;  newline
sCode = sCode &amp; " oForm.Filter = " &amp; "sFormFilter" &amp; newline
sCode = sCode &amp; " oForm.ApplyFilter = TRUE" &amp; newline
sCode = sCode &amp; " oForm.ReLoad" &amp; newline
sCode = sCode &amp; " Else " &amp; newline
sCode = sCode &amp; " ' nothing " &amp; newline
sCode = sCode &amp; " End If " &amp; newline &amp; newline
sCode = sCode &amp; " End Sub" &amp; newline

End Sub

</listing>
</answer>

<changelog>
	<change author-id="tomsontom" date="2004-06-22">Modified to match new snippet-DTD</change>
	<change author-id="sasa" date="0000-00-00">Initial version</change>
</changelog>

</snippet>
