<!--
$RCSfile: Calc.ImportDatabaseContent.snip,v $

last change: $Revision: 1.2 $ $Author: tomsontom $ $Date: 2004/11/18 10:40:04 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="OOBasic" application="Calc">

<keywords>
    <keyword>import database content</keyword>
    <keyword>import </keyword>
    <keyword>database</keyword>
</keywords>

<authors>
    <author id="tomsontom" initial="true" email="tom.schindl@bestsolution.at">Tom Schindl</author>
</authors>

<question heading="Import database content">
How do I import database content efficiently
<p>When creating a rowset and looping through it setting the column values one by one it it&apos;s horribly slow. Is there a better solution available</p>
</question>

<answer>
<p>Yes. You could use the XImport-Interface which is supported by a CellRange</p>
<listing>
    ' Load the tools lib
    Globalscope.BasicLibraries.loadLibrary("Tools")
    ' Create a new OO-Calc-Document
    CalcDoc = CreateNewDocument( "scalc" )

    ' Get the spreadsheet
    Sheet = CalcDoc.Sheets(0)
    Sheet = CalcDoc.Sheets(1)

    ' Create a PropertyValue-Array to specify what we are
    ' loading from the database
    Dim importDesc(2) As New com.sun.star.beans.PropertyValue
    ImportDesc(0).Name  = "DatabaseName"
    importDesc(0).Value = "oeush_billing"
    
    importDesc(1).Name  = "SourceType"
    importDesc(1).Value = com.sun.star.sheet.DataImportMode.SQL
    
    importDesc(2).Name  = "SourceObject"
    importDesc(2).Value = "SELECT cu_id Kundennummer, cu_companyname as Firma, " _
                                + "cu_givenname Vorname, cu_surname Nachname, co_payment1 Betrag," _
                                + "co_label Bezeichnung, co_bill_number Rechnungsummer " _
                                + "FROM customer, contract WHERE co_ref_customer = cu_id " _
                                + "AND co_ref_project = " + ProjectId
    
    ' now lets import by using
    Sheet.getCellRangeByName("A1:A1").doImport(importDesc())
    
    ' Now do some formating
    Dim range As Object
    
    ' make the headline bold and with a grey background
    range = Sheet.getCellRangeByPosition(0,0,6,0)
    range.CharWeight    = com.sun.star.awt.FontWeight.BOLD
    range.CellBackColor = RGB(200,200,200)
    range.HoriJustify   = com.sun.star.table.CellHoriJustify.LEFT
    

    ' make sure that the cols show the whole text
    Dim columns As Object
    Dim i As Integer

    columns = range.getColumns()
    
    for i = 0 to 6
        columns.getByIndex( i ).optimalWidth = true
    next
</listing>
</answer>

<changelog>
    <change author-id="tomsontom" date="2004-09-30">Initial version</change>
    <change author-id="tomsontom" date="2004-11-18">Improved setting of optimal width</change>
</changelog>

</snippet>
