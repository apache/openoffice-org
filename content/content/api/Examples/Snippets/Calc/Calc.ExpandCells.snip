<!--
$RCSfile: Calc.ExpandCells.snip,v $

last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/02/13 13:02:49 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="XSL" application="Calc">

<keywords>
</keywords>

<authors>
	<author id="tomsontom" initial="true" email="tom.schindl@bestsolution.at">Tom Schindl</author>
</authors>

<question heading="I don't know!!!">
</question>

<answer>
<listing><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" version="2.0">
   <xsl:import href="/sgml/xsl/clean.xsl"/>
   <xsl:output method="xml" indent="yes" encoding="utf-8"/>
   <xsl:strip-space elements="*"/>

   <xsl:template match="table:[EMAIL PROTECTED]:number-columns-repeated]">
     <xsl:copy>
       <xsl:copy-of select="@*"/>
       <xsl:apply-templates/>
     </xsl:copy>
     <xsl:call-template name="cpycell">
       <xsl:with-param name="n" select="@table:number-columns-repeated"/>
       <xsl:with-param name="val" select="."/>
     </xsl:call-template>

   </xsl:template>

   <xsl:template name="cpycell">
     <xsl:param name="n" as="xs:integer"/>
     <xsl:param name="val" as="xs:string"/>
     <table:table-cell gen="t">
       <xsl:choose>
         <xsl:when test="$val = ''">
           <xsl:text>*</xsl:text>
         </xsl:when>
         <xsl:otherwise>
           <xsl:value-of select="$val"/>
         </xsl:otherwise>
       </xsl:choose>
     </table:table-cell>

     <xsl:if test="$n &gt; 2 ">
     <xsl:call-template name="cpycell">
       <xsl:with-param name="n" select="$n - 1"/>
       <xsl:with-param name="val" select="$val"/>
     </xsl:call-template>

     </xsl:if>
   </xsl:template>
</xsl:stylesheet>
</listing>
</answer>

<changelog>
	<change author-id="tomsontom" date="2005-10-25">Initial version</change>
</changelog>

</snippet>
