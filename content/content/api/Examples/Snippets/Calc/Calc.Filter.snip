<?xml version="1.0"?>
<!--
$RCSfile: Calc.Filter.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/07/14 09:36:42 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Calc">

<keywords>
</keywords>

<authors>
	<author id="" initial="true" email="h0253952@wu-wien.ac.at">Michael Hinz</author>
</authors>

<question heading="Filter">How can i use a build in filter
</question>

<answer>
<listing>oDesktop         = UNO.createDesktop()   
xComponentLoader = oDesktop~{%see com.sun.star.frame.XDesktop%XDesktop}~{%see com.sun.star.frame.XComponentLoader%XComponentLoader}  
                                                      

url = &quot;private:factory/scalc&quot;
xCalcComponent = xComponentLoader~loadComponentFromURL(url, &quot;_blank&quot;, 0, .UNO~noProps)



xDocument = xCalcComponent~{%see com.sun.star.sheet.XSpreadsheetDocument%XSpreadSheetDocument}
xSheet = xDocument~getSheets~{%see com.sun.star.container.XIndexAccess%XIndexAccess}~getByIndex(0)~{%see com.sun.star.sheet.XSpreadsheet%XSpreadSheet}


CALL UNO.setCell xSheet, 0, 0, &quot;1&quot;
CALL UNO.setCell xSheet, 0, 1, &quot;2&quot;
CALL UNO.setCell xSheet, 0, 2, &quot;3&quot;
CALL UNO.setCell xSheet, 0, 3, &quot;4&quot;
CALL UNO.setCell xSheet, 0, 4, &quot;5&quot;
CALL UNO.setCell xSheet, 0, 5, &quot;6&quot;
CALL UNO.setCell xSheet, 0, 6, &quot;7&quot;
CALL UNO.setCell xSheet, 0, 7, &quot;8&quot;


CALL syssleep 4


myRange = xSheet~{%see com.sun.star.table.XCellRange%XCellRange}~getCellRangeByName(&quot;A1:A7&quot;)


xFilter = myRange~{%see com.sun.star.sheet.XSheetFilterable%XSheetFilterable}
xFilterDesc = xFilter~createFilterDescriptor(.true)


CALL UNO.loadClass &quot;{%see com.sun.star.sheet.TableFilterField}&quot;

aFilterFields = bsf.createArray(.UNO~TableFilterField, 1)

aFilterFields[1] = .UNO~TableFilterField~new
aFilterFields[1]~Field = 0
aFilterFields[1]~IsNumeric = true
aFilterFields[1]~Operator = bsf.getConstant(&quot;{%see com.sun.star.sheet.FilterOperator}&quot;,&quot;GREATER_EQUAL&quot;)
aFilterFields[1]~NumericValue = 5

xFilterDesc~setFilterFields(aFilterFields)
xFilterDesc~{%see com.sun.star.beans.XPropertySet%xPropertySet}~setPropertyValue(&quot;ContainsHeader&quot;, box(&quot;boolean&quot;, .false))
xFilter~filter(xFilterDesc)

::requires UNO.CLS


</listing>
</answer>

<versions>
</versions>

<operating-systems>
<operating-system name="Win32"/>
</operating-systems>

<changelog>
</changelog>

</snippet>
