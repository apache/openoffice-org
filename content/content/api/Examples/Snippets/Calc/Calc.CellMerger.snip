<!-- ========================================================================
$RCSfile: Calc.CellMerger.snip,v $

last change: $Revision: 1.4 $ $Author: jsc $ $Date: 2004/06/24 11:54:28 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the 
Public Documentation License Version 1.0 (the "License"); 
you may only use this Documentation if you comply with 
the terms of this License. A copy of the License is 
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives 
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed 
with the author-tags below.

The Contributor(s) are listed with the author-tags below 
without the marker for being an initial author.

All Rights Reserved.
======================================================================== -->

<snippet language="OOBasic" application="Calc">

<keywords>
  <keyword>Calc</keyword>
  <keyword>cells</keyword>
  <keyword>spreadsheet</keyword>
  <keyword>merge</keyword>
  <keyword>join</keyword>
  <keyword>same</keyword>
  <keyword>equal</keyword>
  <keyword>content</keyword>
  <keyword>formula</keyword>
  <keyword>value</keyword>
  <keyword>string</keyword>
</keywords>


<authors>
	<author id="mi" initial="true" email="mi@sun.com">Michael Hoennig</author>
	<author id="tomsontom" initial="false" email="tom.schindl@bestsolution.at">Tom Schindl</author>
</authors>

<question>
How can I merge subsequent cells with same value?

<p>E.g. a table like:</p>
<pre>
A       A       1	
A       B       1
A       B       1
A       B       1
A       B       2
B       A       1
B       A       1
B       A       1
B       A       2
B       B       1
B       B       2
B       B       2
</pre>

<p>Will be transformed into:</p>

<pre>
A	A       1	
        B       1
		
		
                2
B       A       1
		
		
                2
        B       1
                2
		
</pre>

</question>

<answer>
<p>
The following macro joins all cells in the same column which are
next to each other and have the same value.  For each joined area,
ehe macro continunes with subsequent columns as long as it stays
in the selection.
</p>

<p>This first macro works on the current selection.
It calls the subroutine defined below for the actual merge process.
</p>

<listing>
'========================================================================
'merge equal cells in selected area
Sub mergeEqualCellsInSelectedColumns

'get selected area
aDoc = StarDesktop.CurrentComponent
aSelection = aDoc.getCurrentSelection()
aArea = aSelection.getRangeAddress()

'merge the selected area in active document
mergeEqualCellsInColumns( aDoc, aArea )

End Sub

</listing>

<p>The following macro is the actual implementation of the merge process.
It could be used programmatically as it receives the document and selection to work on as arguments.
</p>

<listing>
'merge equal cells in each column of the given area in the given document
Sub mergeEqualCellsInColumns( aDoc as object, aArea as com.sun.star.table.CellRangeAddress )

'get some commonly used objects
aSheet = aDoc.getSheets().getByIndex( aArea.Sheet )

'enumerate through all rows of the selection
for nRow = aArea.StartRow to aArea.EndRow

	'only work on the first column yet
	nCol = aArea.StartColumn

	'get initial cell in row
	aStartCell = aSheet.getCellByPosition( nCol, nRow )
	aCursor = aSheet.createCursorByRange( aStartCell )

	'find first cell with different content
	nCompareRow = nRow+1
	while ( nCompareRow &lt;= aArea.EndRow and _
			aSheet.getCellByPosition( nCol, nCompareRow ).getFormula() = aStartCell.getFormula() )
		nCompareRow = nCompareRow + 1
	wend
	nLastEqualRow = nCompareRow-1

	'are here equal cells at all?
	if ( nLastEqualRow &gt; nRow ) then
		'merge range of all cells with identical content
		aRange = aSheet.getCellRangeByPosition( nCol, nRow, nCol, nLastEqualRow )
		aRange.merge(true)
		aRange.VertJustify = 1
	
		'if next column is still part of the subjected area
		if nCol &lt; aArea.EndColumn then
			'specify the area in the next column within the merged rows
			dim aSubArea as new com.sun.star.table.CellRangeAddress
			aSubArea.Sheet = aArea.Sheet
			aSubArea.StartRow = nRow
			aSubArea.EndRow = nLastEqualRow
			aSubArea.StartColumn = nCol+1
			aSubArea.EndColumn = aArea.EndColumn
		
			'recursively merge the cells in this area right of the merged area
			mergeEqualCellsInColumns( aDoc, aSubArea )
		endif
	endif

	'continue after merged area
	nRow = nLastEqualRow
next
End Sub
</listing>

</answer>

<changelog>
	<change author-id="tomsontom" date="2004-06-22">Modified to match new snippet-DTD</change>
	<change author-id="mi" date="0000-00-00">initial release</change>
</changelog>

</snippet>
