--- /projects/sise/openoffice/devel/workpits/source/OO641/sal/osl/unx/file.c   Thu Sep 27 08:30:58 2001
+++ sal/osl/unx/file.c        Mon Nov 12 17:23:46 2001
@@ -132,7 +132,8 @@
 #elif defined(IRIX)
 #include <mntent.h>
 #include <sys/mount.h>
-#include <sys/vfs.h>
+#include <sys/statfs.h>
+#define  HAVE_STATFS_H
 #include <sys/quota.h>
 #include <ctype.h>
 static const sal_Char* MOUNTTAB="/etc/mtab";
@@ -2305,8 +2306,10 @@
 
 #if defined(FREEBSD) || defined(NETBSD)
 #define __OSL_STATFS statfs
+#define __OSL_STATFS_FUNC statfs
 
 #define __OSL_STATFS_BLKSIZ(a) ((sal_uInt64)((a).f_bsize))
+#define __OSL_STATFS_BLKAVAIL(a) ((sal_uInt64)((a).f_bavail))
 #define __OSL_STATFS_TYPENAME(a) ((a).f_fstypename)
 
 #define __OSL_STATFS_ISREMOTE(a) (((a).f_type & MNT_LOCAL) == 0)
@@ -2315,8 +2318,10 @@
 
 #if defined(LINUX)
 #define __OSL_STATFS statfs
+#define __OSL_STATFS_FUNC statfs
 
 #define __OSL_STATFS_BLKSIZ(a) ((sal_uInt64)((a).f_bsize))
+#define __OSL_STATFS_BLKAVAIL(a) ((sal_uInt64)((a).f_bavail))
 
 /* <linux/nfs_fs.h> */
 #define __OSL_STATFS_ISNFS(a) ((a).f_type == 0x6969) /* NFS_SUPER_MAGIC */
@@ -2329,10 +2334,29 @@
 
 #endif /* LINUX */
 
+#if defined(IRIX)
+
+#define __OSL_STATFS statfs
+#define __OSL_STATFS_FUNC(a, b) statfs((a), (b), sizeof(struct statfs), 0)
+
+#define __OSL_STATFS_BLKSIZ(a) ((sal_uInt64)((a).f_bsize))
+#define __OSL_STATFS_BLKAVAIL(a) ((sal_uInt64)((a).f_bfree))
+
+#define __OSL_STATFS_ISNFS(a) ((a).f_fstyp == 0x6969) /* NFS_SUPER_MAGIC */
+
+#define __OSL_STATFS_ISSMB(a) ((a).f_fstyp == 0x517B) /* SMB_SUPER_MAGIC */
+
+#define __OSL_STATFS_ISREMOTE(a) \
+(__OSL_STATFS_ISNFS((a)) || __OSL_STATFS_ISSMB((a)))
+
+#endif /* IRIX */
+
 #if defined(SOLARIS)
 #define __OSL_STATFS statvfs
+#define __OSL_STATFS_FUNC statfs
 
 #define __OSL_STATFS_BLKSIZ(a) ((sal_uInt64)((a).f_frsize))
+#define __OSL_STATFS_BLKAVAIL(a) ((sal_uInt64)((a).f_bavail))
 #define __OSL_STATFS_TYPENAME(a) ((a).f_basetype)
 
 #define __OSL_STATFS_ISREMOTE(a) (rtl_str_compare((a).f_basetype, "nfs") == 0)
@@ -2376,7 +2400,8 @@
 #endif
 
 	memset (&aStatFS, 0, sizeof(aStatFS));
-	if (__OSL_STATFS (pszDirectory, &aStatFS) < 0)
+
+	if (__OSL_STATFS_FUNC (pszDirectory, &aStatFS) < 0)
 	{
 		/* Failure */
 		oslFileError result = oslTranslateFileError (errno);
@@ -2430,7 +2455,7 @@
 		else
 		{
 			/* available space */
-			pInfo->uFreeSpace *= (sal_uInt64)(aStatFS.f_bavail);
+			pInfo->uFreeSpace *= __OSL_STATFS_BLKAVAIL(aStatFS);
 		}
 		pInfo->uValidFields |= osl_VolumeInfo_Mask_FreeSpace;
 #endif  /* __OSL_STATFS_BLKSIZ */
@@ -3723,7 +3748,7 @@
 #ifdef DEBUG_OSL_FILE
             fprintf(stderr,"osl_File_E_NXIO");
 #endif
-            tErr = osl_File_E_IO;
+            tErr = osl_File_E_NXIO;
             break;
             
         case E2BIG:
@@ -4214,10 +4239,10 @@
     FILE* mntfile=0;
     sal_Char buffer[PATH_MAX];
     
-#if defined(LINUX)
+#if defined(LINUX) || defined(IRIX)
     struct mntent* pMountEnt=0;
     mntfile = setmntent(MOUNTTAB,"r");
-#endif /* LINUX */
+#endif /* LINUX || IRIX */
 
 #if defined(SOLARIS)
     struct mnttab MountEnt;
