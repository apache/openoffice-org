<?xml version="1.0"?>
<!--
$RCSfile: Impress.DealWithImpressRexx.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/07/11 04:54:57 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Impress">

<keywords>
	<keyword>Impress</keyword>
	<keyword>ooRexx</keyword>
</keywords>

<authors>
	<author id="RGF" initial="true" email="">Rony G. Flatscher</author>
</authors>

<question heading="DealWithImpressRexx">How do I deal with Impress?
<p>... demonstrate some common things</p>
</question>

<answer>
<p>... some common things one can do with impress documents </p>
<p>(modelled after/transcribed from the CPP snippet)</p>
<listing>/*
   Modelled (transcribed from) the CPP snippet at {%internal ./Impress.DealWithImpress.snip}
   for ooRexx ({%external http://www.ooRexx.org}).
*/

-- Retrieve the Desktop object, we need its XComponentLoader interface to load a new document
oDesktop   = UNO.createDesktop()    -- get the UNO Desktop service object
comploader = oDesktop~{%see com.sun.star.frame.XDesktop%XDesktop}~{%see com.sun.star.frame.XComponentLoader%XComponentLoader} -- get componentLoader
                                                -- interface
   -- create an empty Impress component
component = comploader~loadComponentFromURL(&quot;private:factory/simpress&quot;, &quot;_blank&quot;, 0, .UNO~noProps)

/* get draw page by index */
oDoc = component~{%see com.sun.star.drawing.XDrawPagesSupplier%XDrawPagesSupplier}

call changeTitle oDoc               -- set the Title with XDocumentInfoSupplier
drawpages=oDoc~getDrawPages         -- get DrawPages Container
pagecount=drawpages~{%see com.sun.star.container.XIndexAccess%XIndexAccess}    -- for index access and counting usage

newDrawPage=drawpages~insertNewByIndex(0)       -- insert a new drawpage
namecontainer=newDrawPage~{%see com.sun.star.container.XNamed%XNamed}

-- count pages and print them out to stdout
say &quot;There are&quot; pageCount~getCount &quot;pages in the Impress document&quot;
say

-- Loop through all pages and give Pagenumber+Pagename to each of them
do icounter=0 to pageCount~getCount-1
   pagename=pagecount~getByIndex(icounter)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}~{%see com.sun.star.container.XNamed%XNamed}~getName
   say &quot; Page Number&quot; icounter &quot;has the name&quot; pagename
end

namecontainer~setName(&quot;My second Page&quot;)         -- Playing around with the inserted page...
Name=namecontainer~getName
mValue=newDrawPage~{%see com.sun.star.beans.XPropertySet%XPropertySet}~getPropertyValue(&quot;Number&quot;)
say
say &quot;The newly inserted page &apos;&quot;Name&quot;&apos; is in position&quot; mValue

-- set the focus on the newly inserted page
oDoc~{%see com.sun.star.frame.XModel%XModel}~getCurrentController~{%see com.sun.star.drawing.XDrawView%XDrawView}~setCurrentPage(newDrawPage)


        /**********************
         **** DRAWING PART ****
         **********************/

-- get Document factory
DocFactory=component~{%see com.sun.star.lang.XMultiServiceFactory%XMultiServiceFactory}
Pos =.bsf~new(&quot;{%see com.sun.star.awt.Point}&quot;,  7000, 7000)
Size=.bsf~new(&quot;{%see com.sun.star.awt.Size}&quot;,  16000, 3000)

-- instantiate TextShape and assign properties
txtShape=DocFactory~createInstance(&quot;{%see com.sun.star.drawing.TextShape}&quot;)~{%see com.sun.star.drawing.XShape%XShape}
txtShape~~setPosition(Pos)~~setSize(Size)
page1=pageCount~getByIndex(0)~{%see com.sun.star.drawing.XDrawPage%XDrawPage}

call drawMe txtShape, page1, &quot;My TextShape&quot;

-- use the much simpler method XTextRange setString() rather than insertTextContent()
txtShape~{%see com.sun.star.text.XText%XText}~setString(&quot;Hello to all people around the world&quot;)

        /* ~~ ON SECOND PAGE ~~ */
pos~X=2000;      pos~Y=6000
size~Width=7000; size~Height=2000
rectShape=DocFactory~createInstance(&quot;{%see com.sun.star.drawing.RectangleShape}&quot;)~{%see com.sun.star.drawing.XShape%XShape}
rectShape~~setPosition(pos)~~setSize(size)

call drawMe rectShape, newDrawPage, &quot;My Rectangle&quot;

-- play a Presentation
call Presentation component


::requires UNO.CLS    -- get UNO support

::routine  changeTitle
  use arg oDoc

  docinfo=oDoc~{%see com.sun.star.document.XDocumentInfoSupplier%XDocumentInfoSupplier}~getDocumentInfo
  DocInfoProps=docinfo~{%see com.sun.star.beans.XPropertySet%XPropertySet}

      -- get some infos about user via Java
  s=.bsf4rexx~system.class    -- get &quot;java.lang.System&quot; and its information
  userInfo=s~getProperty(&quot;user.name&quot;) &quot;on&quot; s~getProperty(&quot;os.name&quot;)&quot;:&quot;

  -- Original author meant &quot;Title&quot; which can be queried via &quot;File-&gt;Properties-&gt;Description&quot;
  DocInfoProps~setPropertyValue(&quot;Title&quot;, userInfo &quot;My First attempt on&quot; date(&quot;S&quot;) time() )

::routine drawMe
  use arg Shape, page, shapename

  page~{%see com.sun.star.drawing.XShapes%XShapes}~add(Shape)
  Shape~{%see com.sun.star.beans.XPropertySet%XPropertySet}~setPropertyValue(&quot;Name&quot;, shapename)

::routine Presentation
  use arg component

  mPres_props=component~{%see com.sun.star.presentation.XPresentationSupplier%XPresentationSupplier}~getPresentation~{%see com.sun.star.beans.XPropertySet%XPropertySet}
  mPres_props~setPropertyValue(&quot;FirstPage&quot;, box(&quot;short&quot;, 0))
</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
	<change author-id="RGF" date="2006-07-10">Initial version</change>
</changelog>

</snippet>
