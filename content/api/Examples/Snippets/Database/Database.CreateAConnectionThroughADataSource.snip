<?xml version="1.0"?>
<!--
$RCSfile: Database.CreateAConnectionThroughADataSource.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2007/03/12 08:42:46 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Database">

<keywords>
	<keyword>interactive login</keyword>
	<keyword>non-interactive login</keyword>
</keywords>

<authors>
</authors>

<question heading="create a connection through a data source">How can I create a connection through a data source, which is registered in the DatabaseContext?
</question>

<answer>
<listing>/* get the service manager */
xContext = UNO.connect()
XMcf = xContext~getServiceManager

/* retrieve the DatabaseContext and get its XNameAccess interface */
xNameAccess = xMcf~createInstanceWithContext(-
	&quot;{%see com.sun.star.sdb.DatabaseContext}&quot;, xContext)~{%see com.sun.star.container.XNameAccess%XNameAccess}

/* we use the mysql-test data sorce */
dataSource = xNameAccess~getByName(&quot;mysql-test&quot;)

/************ interactive login ************/

/* create an InteractionHandler and get its XInteractionHandler interface */
interactionHandler = XMcf~createInstanceWithContext(-
	&quot;{%see com.sun.star.sdb.InteractionHandler}&quot;, xContext);
xInteractionHandler = interactionHandler~{%see com.sun.star.task.XInteractionHandler%XInteractionHandler}	

/* query for the XCompletedConnection interface of the data source */
xCompletedConnection = dataSource~{%see com.sun.star.sdb.XCompletedConnection%XCompletedConnection}

/* connect with interactive login */
xConnection = xCompletedConnection~connectWithCompletion(xInteractionHandler);


/************ non-interactive login ************/
/*
/* query for the XDataSource interface of the data source */
xDataSource = dataSource~{%see com.sun.star.sdbc.XDataSource%XDataSource}

/* simple way to connect - hard code (usr,pw) */
xConnection = xDataSource~getConnection(&quot;stefan&quot;,&quot;apple&quot;);

*/


say &quot;Connection created!&quot;
	
/* get the XClosable interface and close the connection */
xConnection~{%see com.sun.star.sdbc.XCloseable%XCloseable}~close
say &quot;Connection closed!&quot;

::requires UNO.cls -- get UNO support</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="All"/>
</operating-systems>

<changelog>
</changelog>

</snippet>
