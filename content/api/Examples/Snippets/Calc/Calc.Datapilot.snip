<?xml version="1.0"?>
<!--
$RCSfile: Calc.Datapilot.snip,v $
last change: $Revision: 1.1 $ $Author: tomsontom $ $Date: 2006/07/14 09:36:42 $

(c)2003 by the copyright holders listed with the author-tags.
If no explicit copyright holder is mentioned with a certain author,
the author him-/herself is the copyright holder. All rights reserved.

Public Documentation License Notice:

The contents of this Documentation are subject to the
Public Documentation License Version 1.0 (the "License");
you may only use this Documentation if you comply with
the terms of this License. A copy of the License is
available at http://www.openoffice.org/licenses/PDL.html

The Original Documentation can be found in the CVS archives
of openoffice.org at the place specified by RCSfile: in this header.

The Initial Writer(s) of the Original Documentation are listed
with the author-tags below.

The Contributor(s) are listed with the author-tags below
without the marker for being an initial author.

All Rights Reserved.
-->

<snippet language="ooRexx" application="Calc">

<keywords>
</keywords>

<authors>
	<author id="" initial="true" email="h0253952@wu-wien.ac.at">Michael Hinz</author>
</authors>

<question heading="Datapilot">How can i add a data pilot
</question>

<answer>
<listing>/* get the desktop  (an Xdesktop object) */
oDesktop = UNO.createDesktop()   
xComponentLoader = oDesktop~{%see com.sun.star.frame.XDesktop%XDesktop}~{%see com.sun.star.frame.XComponentLoader%XComponentLoader}      --get componentLoader interface
                                                      
/* open a blank calc file */
url = &quot;private:factory/scalc&quot;
xCalcComponent = xComponentLoader~loadComponentFromURL(url, &quot;_blank&quot;, 0, .UNO~noProps)
/* get first  sheet in spreadsheet */
xDocument = xCalcComponent~{%see com.sun.star.sheet.XSpreadsheetDocument%XSpreadSheetDocument}
xSheet = xDocument~getSheets~{%see com.sun.star.container.XIndexAccess%XIndexAccess}~getByIndex(0)~{%see com.sun.star.sheet.XSpreadsheet%XSpreadSheet}

/* insert  values into cells */
CALL UNO.setCell xSheet, 1, 0, &quot;Name&quot;
CALL UNO.setCell xSheet, 2, 0, &quot;Amount&quot;
CALL UNO.setCell xSheet, 3, 0, &quot;Month&quot;
CALL UNO.setCell xSheet, 1, 1, &quot;Michael&quot;
CALL UNO.setCell xSheet, 1, 2, &quot;John&quot;
CALL UNO.setCell xSheet, 1, 3, &quot;John&quot;
CALL UNO.setCell xSheet, 1, 4, &quot;Michael&quot;
CALL UNO.setCell xSheet, 1, 5, &quot;Michael&quot;
CALL UNO.setCell xSheet, 1, 6, &quot;John&quot;
CALL UNO.setCell xSheet, 1, 7, &quot;John&quot;
CALL UNO.setCell xSheet, 1, 8, &quot;Michael&quot;
CALL UNO.setCell xSheet, 2, 1, 100
CALL UNO.setCell xSheet, 2, 2, 200
CALL UNO.setCell xSheet, 2, 3, 123
CALL UNO.setCell xSheet, 2, 4, 12
CALL UNO.setCell xSheet, 2, 5, 100
CALL UNO.setCell xSheet, 2, 6, 200
CALL UNO.setCell xSheet, 2, 7, 123
CALL UNO.setCell xSheet, 2, 8, 12
CALL UNO.setCell xSheet, 3, 4, 2
CALL UNO.setCell xSheet, 3, 1, 2
CALL UNO.setCell xSheet, 3, 2, 1
CALL UNO.setCell xSheet, 3, 3, 1
CALL UNO.setCell xSheet, 3, 5, 2
CALL UNO.setCell xSheet, 3, 6, 2
CALL UNO.setCell xSheet, 3, 7, 1
CALL UNO.setCell xSheet, 3, 8, 1

/*get  cell range*/
xCellRange = xSheet~{%see com.sun.star.table.XCellRange%xCellRange}~getCellRangeByName(&quot;A1:D9&quot;)
xCellRangeAddress = xCellRange~{%see com.sun.star.sheet.XCellRangeAddressable%XCellRangeAddressable}~getRangeAddress

/*create createDataPilotDescriptor by calling  XDataPilotTablesSupplie*/
xDataSupplier = xSheet~{%see com.sun.star.sheet.XDataPilotTablesSupplier%XDataPilotTablesSupplier}
xData = xDataSupplier~getDataPilotTables()
xDataDescript = xData~createDataPilotDescriptor()

xDataDescript~setSourceRange(xCellRangeAddress)

myRange = xSheet~getCellByPosition(1, 10)
myAddr = myRange~{%see com.sun.star.sheet.XCellAddressable%XCellAddressable}~getCellAddress

xFields = xDataDescript~getDataPilotFields()     -- get  DataPilotFields

/*apply values to DataPilotFields*/
aFieldObj = xFields~getByIndex(1)
aFieldObj~{%see com.sun.star.beans.XPropertySet%xPropertySet}~setPropertyValue(&quot;Orientation&quot;,bsf.getConstant(&quot;{%see com.sun.star.sheet.DataPilotFieldOrientation}&quot;,&quot;COLUMN&quot;))
aFieldObj = xFields~getByIndex(3)
aFieldObj~{%see com.sun.star.beans.XPropertySet%xPropertySet}~setPropertyValue(&quot;Orientation&quot;,bsf.getConstant(&quot;{%see com.sun.star.sheet.DataPilotFieldOrientation}&quot;,&quot;ROW&quot;))
aFieldObj = xFields~getByIndex(2)
aFieldObj~{%see com.sun.star.beans.XPropertySet%xPropertySet}~setPropertyValue(&quot;Orientation&quot;, bsf.getConstant(&quot;{%see com.sun.star.sheet.DataPilotFieldOrientation}&quot;,&quot;DATA&quot;))

aFieldObj~{%see com.sun.star.beans.XPropertySet%xPropertySet}~setPropertyValue(&quot;Function&quot;, bsf.getConstant(&quot;{%see com.sun.star.sheet.GeneralFunction}&quot;, &quot;SUM&quot;))

/*apply data pilot  to sheet*/
xData~insertNewByName(&quot;DataPilotExample&quot;, myAddr, xDataDescript)

::requires UNO.CLS   -- get UNO support</listing>
</answer>

<versions>
	<version number="2.0.x" status="tested"/>
</versions>

<operating-systems>
<operating-system name="Win32"/>
</operating-systems>

<changelog>
</changelog>

</snippet>
