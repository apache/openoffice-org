<!--

$RCS index.html,v $


last change: $Revision: 1.3 $ $Author: tomsontom $ $Date: 2004/08/16 09:57:43 $


(c)2003 by the copyright holders listed with the author-tags.

If no explicit copyright holder is mentioned with a certain author,

the author him-/herself is the copyright holder. All rights reserved.


Public Documentation License Notice:


The contents of this Documentation are subject to the

Public Documentation License Version 1.0 (the "License");

you may only use this Documentation if you comply with

the terms of this License. A copy of the License is

available at http://www.openoffice.org/licenses/PDL.html


The Original Documentation can be found in the CVS archives

of openoffice.org at the place specified by RCS in this header.


The Initial Writer(s) of the Original Documentation are listed

with the author-tags below.


The Contributor(s) are listed with the author-tags below

without the marker for being an initial author.


All Rights Reserved.

-->


<snippet language="OOBasic" application="Calc">


<keywords>

<keyword>column</keyword>

<keyword>split</keyword>

</keywords>


<authors>

<author id="" initial="true" email="">Sasa Kelecevic</author>

</authors>


<question heading="split column">

How to split column

<p>How to split column into the form of n columns by m rows.</p>

</question>


<answer>

<p>The following macro split column A in Sheet1 into 5 columns.</p>

<p>First select a cell in new sheet ie. Sheet2 and then run macro.</p>

<listing>

REM ***** BASIC *****


Sub Main

SplitColumn ( "Sheet1","A",5)

End Sub


Sub SplitColumn ( SheetName As String , ColumnName As String , ColumnsNo As Integer )

iSheetIndex = ThisComponent.CurrentSelection.CellAddress.Sheet

oSheet = ThisComponent.Sheets.getByIndex( iSheetIndex )

RowsNo = GetLastUsedRow( ThisComponent.Sheets.getByName ( SheetName ) )

' status bar progress indikator

oBar = THISCOMPONENT.CurrentController.StatusIndicator

iNum = 1

oBar. start ( "Split column " &amp; ColumnName &amp; " in sheet " &amp; SheetName, RowsNo/ColumnsNo )

For nR = 0 to RowsNo/ColumnsNo

oBar.setValue ( nR )

For nC = 0 To ColumnsNo - 1

oSheet.getCellByPosition (nC,nR).setFormula("=" &amp; SheetName &amp; "." &amp; ColumnName &amp; iNum )

iNum = iNum + 1

Next nC

Next nR


oBar.End


End Sub


' from Tools library

Function GetLastUsedRow(oSheet as Object) as Integer

Dim oCell As Object

Dim oCursor As Object

Dim aAddress As Variant

oCell = oSheet.GetCellbyPosition(0, 0)

oCursor = oSheet.createCursorByRange(oCell)

oCursor.GotoEndOfUsedArea(True)

aAddress = oCursor.RangeAddress

GetLastUsedRow = aAddress.EndRow

End Function



</listing>

</answer>


<changelog>

</changelog>


</snippet>
